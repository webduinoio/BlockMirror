[
    {
        "id": 2,
        "title": "重複字元的刪除",
        "content": "請寫一個程式，讀入一個字符串，將其中連續出現超過一次的字元刪除，並輸出刪除後的字符串。",
        "theinput": "每組輸入共一行，內含一個字符串 s (1 ≤ |s| ≤ 100)。",
        "theoutput": "對於每組輸入，輸出該字符串中，連續出現超過一次的字元刪除後的結果。",
        "sample": "[[\"aaabccddd\"],[\"hello, world!\"],[\"122333444455555\"],[\"abcdefg\"]]",
        "hint": "可以使用 Python 字符串的切片功能和列表操作。例如，s[i:i+2] 可以得到字符串 s 中第 i 個和第 i+1 個字符构成的子串；使用列表的 append() 方法可以将元素加入列表中。",
        "hash": "[\"Python\",\"字符串\",\"列表\",\"切片\"]",
        "samplecode": "s = input()\nres = []\nfor i in range(len(s)):\n if i == len(s)-1 or s[i] != s[i+1]:\n res.append(s[i])\nprint(''.join(res))\n",
        "": ""
    },
    {
        "id": 3,
        "title": "求取圓的面積和周長",
        "content": "請寫一個程式，讀入一個半徑 r，求圓的面積和周長。",
        "theinput": "每組輸入共一行，內含一個正整數 r (0 < r < 1000)。",
        "theoutput": "對於每組輸入，輸出該圓的面積和周長，保留兩位小數。",
        "sample": "[[\"5\"],[\"78.54 31.42\"],[\"10\"],[\"314.16 62.83\"]]",
        "hint": "圓周率可以使用 math 库的 pi 常量来获得。",
        "hash": "[\"Python\",\"資料型別\",\"math 库\"]",
        "samplecode": "import math\n\nr = int(input())\narea = round(math.pi * r ** 2, 2)\ncircumference = round(math.pi * 2 * r, 2)\nprint(str(area) + ' ' + str(circumference))\n",
        "": ""
    },
    {
        "id": 4,
        "title": "倒序輸出字串",
        "content": "請寫一個程式，讀入一個字串，將該字串倒序輸出。",
        "theinput": "每組輸入共一行，內含一個字串 s (1 ≤ |s| ≤ 100)。",
        "theoutput": "對於每組輸入，輸出該字串的倒序。",
        "sample": "[[\"hello, world!\"],[\"!dlrow ,olleh\"],[\"Python is cool\"],[\"looc si nohtyP\"]]",
        "hint": "可以使用 Python 字符串的切片功能，例如 s[::-1] 可以得到倒序的字符串。",
        "hash": "[\"Python\",\"字符串\",\"切片\"]",
        "samplecode": "s = input()\nprint(s[::-1])\n",
        "": ""
    },
    {
        "id": 5,
        "title": "身分證字號檢查",
        "content": "請寫一個程式，檢查輸入的身分證字號是否合法。如果合法，請輸出 'Valid'，否則輸出 'Invalid'。",
        "theinput": "每組測試資料共一行，為一個字串，表示輸入的身分證字號。輸入字串的長度一定為 10，且由 1 個英文字母和 9 個數字組成。",
        "theoutput": "對於每組測試資料，輸出 'Valid' 或 'Invalid'。",
        "sample": "[[\"B123456789\"],[\"A123456789\"],[\"C123456789\"],[\"G123456789\"],[\"Z123456789\"]]",
        "hint": "身分證字號的規則可以參考網路上的相關資料。",
        "hash": "[\"Python資料型態\"]",
        "samplecode": "n = str(input())\nif n[0] not in ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'X', 'Y', 'W', 'Z']:\n print('Invalid')\nelif not n[1:10].isdigit() or len(n[1:10]) != 9:\n print('Invalid')\nelse:\n print('Valid')\n",
        "": ""
    },
    {
        "id": 6,
        "title": "年龄转换",
        "content": "请编写一个程序，将人的年龄转换成对应的天数。假设一年有365天。",
        "theinput": "每组输入共一行，内含一个正整数age（0 < age <= 100）表示年龄。",
        "theoutput": "对于每组输入，输出一个整数表示年龄对应的天数。",
        "sample": "[[\"18\"],[\"6570\"],[\"100\"]]",
        "hint": "[[\"6570\"],[\"2393250\"],[\"36500\"]]",
        "hash": "[\"Python基础\",\"数值类型\"]",
        "samplecode": "age = int(input())\ndays = age * 365\nprint(days)\n",
        "": ""
    },
    {
        "id": 7,
        "title": "字串運算",
        "content": "請撰寫一個程式，讀入一個字串 s，並分別執行下列 4 種運算：",
        "theinput": "輸入一個字串 s（1 ≤ |s| ≤ 1000）。",
        "theoutput": "分別輸出 s 的長度、s 中的第一個字元、s 中的最後一個字元、s 中由第 2 個字元開始到倒數第 2 個字元組成的子字串，輸出四個值，每個值佔一行。",
        "sample": "[[\"hello, world!\"],[\"13\\nh\\n!\\nello, worl\"],[\"abcdefghijklmnopqrstuvwxyz\"],[\"26\\na\\nz\\nbcdefghijklmnopqrstuvwxy\"]]",
        "hint": "使用 Python 的字串索引、切片等運算。",
        "hash": "[\"Python 字串運算\"]",
        "samplecode": "s = input()\nprint(len(s))\nprint(s[0])\nprint(s[-1])\nprint(s[1:-1])\n",
        "": ""
    },
    {
        "id": 8,
        "title": "資料型態的使用",
        "content": "請寫一個Python程式，讀入一個整數，一個浮點數，一個字串，一個布林值，並依序輸出這些變數的值以及其資料型態。",
        "theinput": "輸入共一行，內含有一個整數，一個浮點數，一個字串，一個布林值，以空白隔開，字串長度不超過 100。",
        "theoutput": "對於每組輸入，輸出四行，分別是整數、浮點數、字串、布林值的值以及其對應的資料型態，資料型態使用 Python 內建函數 type() 取得。",
        "sample": "[[\"123 3.14 Hello True\"],[\"123 <class 'int'>\",\"3.14 <class 'float'>\",\"Hello <class 'str'>\",\"True <class 'bool'>\"],[\"-456 2.718 Python False\"],[\"-456 <class 'int'>\",\"2.718 <class 'float'>\",\"Python <class 'str'>\",\"False <class 'bool'>\"],[\"999999 1.414 Hello, Python! True\"],[\"999999 <class 'int'>\",\"1.414 <class 'float'>\",\"Hello, Python! <class 'str'>\",\"True <class 'bool'>\"],[\"0 0.0 '' False\"],[\"0 <class 'int'>\",\"0.0 <class 'float'>\",\"'' <class 'str'>\",\"False <class 'bool'>\"],[\"123456789 -1.23 Hello, World! True\"],[\"123456789 <class 'int'>\",\"-1.23 <class 'float'>\",\"Hello, World! <class 'str'>\",\"True <class 'bool'>\"]]",
        "hint": "請使用 input() 函數讀取輸入，並使用 type() 函數取得資料型態。",
        "hash": "[\"基本輸出輸入\",\"資料型態\"]",
        "samplecode": "n = input().split()\nfor i in range(len(n)):\n print(n[i], type(eval(n[i])))\n",
        "": ""
    },
    {
        "id": 9,
        "title": "資料型態 - 基本運算",
        "content": "請寫一個程式，讀入兩個整數，並計算它們的和、差、乘積、商和餘數。",
        "theinput": "每組輸入共一行，內含有兩個整數 a, b，以空白隔開，a, b絕對值皆小於等於 10^6。",
        "theoutput": "對於每組輸入，輸出該兩整數的和、差、乘積、商和餘數，每個運算結果佔一行，順序為和、差、乘積、商、餘數。",
        "sample": "[[\"5 10\"],[\"15\",\"-5\",\"50\",\"0\",\"5\"],[\"1 2\"],[\"3\",\"-1\",\"2\",\"0\",\"1\"],[\"3 2\"],[\"5\",\"1\",\"6\",\"1\",\"1\"]]",
        "hint": "可以使用內建的算術運算子",
        "hash": "[\"基本運算\",\"資料型態\"]",
        "samplecode": "a, b = map(int, input().split())\nprint(a+b)\nprint(a-b)\nprint(a*b)\nprint(a//b)\nprint(a%b)\n",
        "": ""
    },
    {
        "id": 10,
        "title": "販賣機",
        "content": "你正在經營一台販賣機。這台販賣機能夠接受1元、5元、10元、50元、100元的硬幣。假設販賣機已經裝滿了所需商品，請寫一個程式，計算並輸出販賣機總共接受了多少錢。",
        "theinput": "輸入5個整數，分別代表販賣機接受的1元、5元、10元、50元、100元硬幣的個數。",
        "theoutput": "輸出販賣機接受的總金額，保留兩位小數。",
        "sample": "[[\"2 2 2 2 2\"],[\"210.00\"]]",
        "hint": "可以利用列表和迴圈來儲存和計算販賣機接受的硬幣，最後用總和乘上硬幣的面額即可。",
        "hash": "[\"資料型態\",\"迴圈\"]",
        "samplecode": "coins = list(map(int, input().split()))\nvalue = [1, 5, 10, 50, 100]\nsum = 0\nfor i in range(5):\n sum += coins[i] * value[i]\nprint('%.2f' % sum)\n",
        "": ""
    },
    {
        "id": 11,
        "title": "計算總和",
        "content": "請寫一個程式，讀入一個正整數 n，然後再讀入 n 個整數，輸出這 n 個整數的和。",
        "theinput": "第一行為一個正整數 n，表示接下來有 n 個整數。第二行開始為 n 個整數，以空白分隔，每個整數皆在 int32 範圍內。",
        "theoutput": "輸出這 n 個整數的總和。",
        "sample": "[[\"5\",\"1 2 3 4 5\"],[\"15\"]]",
        "hint": "使用迴圈逐一讀入每個整數，並加總。",
        "hash": "[\"迴圈\"]",
        "samplecode": "n = int(input())\nsum = 0\nfor i in range(n):\n sum += int(input())\nprint(sum)\n",
        "": ""
    },
    {
        "id": 12,
        "title": "找最大值和最小值",
        "content": "請寫一個程式，讀入一個正整數 n，然後再讀入 n 個整數，輸出這 n 個整數中的最大值和最小值。",
        "theinput": "第一行為一個正整數 n，表示接下來有 n 個整數。第二行開始為 n 個整數，以空白分隔，每個整數皆在 int32 範圍內。",
        "theoutput": "輸出這 n 個整數中的最大值和最小值，以一個空格分隔。",
        "sample": "[[\"5\",\"10 2 30 4 5\"],[\"30 2\"]]",
        "hint": "使用串列存儲輸入的數字，然後使用內建函數求最大值和最小值。",
        "hash": "[\"串列\"]",
        "samplecode": "n = int(input())\nnumbers = list(map(int, input().split()))\nprint(max(numbers), min(numbers))\n",
        "": ""
    },
    {
        "id": 13,
        "title": "排隊等候",
        "content": "某公司有 n 個員工要排隊，每個員工需要等待的時間不同，以數字表示。現在你可以請任意一個員工加入到隊列的最前面，請問加入後每個員工需要等待的總時間最小是多少？",
        "theinput": "第一行是一個整數 n (1 ≤ n ≤ 100)，代表員工數量。接下來一行是 n 個整數，以空格隔開，代表每個員工需要等待的時間 ti (1 ≤ ti ≤ 100)。",
        "theoutput": "輸出加入後每個員工需要等待的總時間最小值。",
        "sample": "[[\"5\",\"5 3 2 7 8\"],[\"34\"]]",
        "hint": "[\"List\"]",
        "hash": "可以先計算出原本的等待總時間，接著嘗試將每個員工插入到不同的位置，計算插入後的等待總時間，比較找出最小值。",
        "samplecode": "n = int(input())\ntime_list = list(map(int, input().split()))\ntotal_time = sum(time_list)\nmin_time = total_time\nfor i in range(n):\n    new_time_list = time_list.copy()\n    new_time_list.pop(i)\n    new_time_list.insert(0, time_list[i])\n    new_total_time = sum(new_time_list)\n    if new_total_time < min_time:\n        min_time = new_total_time\nprint(min_time)",
        "": ""
    },
    {
        "id": 14,
        "title": "字典操作",
        "content": "請寫一個程式，用字典記錄人物名稱與年齡，並能夠查詢人物的年齡。",
        "theinput": "每組輸入共兩行，第一行輸入字典中的人物數量 n (n < 100)，第二行輸入 n 個人物名稱和年齡，以空格隔開。",
        "theoutput": "對於每組輸入，輸出每個人物的名字及年齡，然後輸入一個人物名字，輸出該人物的年齡。若該人物不存在，輸出 Not found。",
        "sample": "[[\"3\"],[\"Amy 20 Bill 30 Cary 25\"],[\"Cary\"],[\"Cary is 25\\n\"]]",
        "hint": "[\"字典操作\",\"基礎語法\"]",
        "hash": "先用字典記錄人物的名字及年齡，再根據輸入的名字查詢對應的年齡。",
        "samplecode": "n = int(input())\nname_age = {}\nfor i in range(n):\n name, age = input().split()\n name_age[name] = age\nfor name in name_age:\n print(name, name_age[name])\nquery = input()\nif query in name_age:\n print(query + ' is ' + name_age[query])\nelse:\n print('Not found')\n",
        "": ""
    },
    {
        "id": 15,
        "title": "計算陣列的平均值",
        "content": "請寫一個 Python 程式，計算輸入的整數陣列的平均值。",
        "theinput": "輸入共兩行，第一行是一個整數 n（1 ≤ n ≤ 100），表示陣列的長度。第二行是 n 個整數 a1, a2, …, an（-100 ≤ ai ≤ 100）。",
        "theoutput": "輸出一個整數，表示整數陣列的平均值，四捨五入至整數。",
        "sample": "[[\"5\",\"1 2 3 4 5\"],[\"3\"]]",
        "hint": "可以使用 Python 內建函式 sum() 和 len() 來求和和計算陣列的長度。",
        "hash": "[\"Python\",\"List\"]",
        "samplecode": "n = int(input())\nnums = list(map(int, input().split()))\navg = round(sum(nums) / len(nums))\nprint(avg)\n",
        "": ""
    },
    {
        "id": 16,
        "title": "銀行利息計算",
        "content": "你想在銀行開立一個存款帳戶，並想知道存款金額經過n年後，利息加本金的總額。請設計一個程式來協助你計算。假設利率為3%，計算方式為複利計算，即每年的利息都會加入本金，下一年再繼續計算，直到n年後。",
        "theinput": "輸入包含一行，包含兩個正整數n(1 ≤ n ≤ 10)和m(0 ≤ m ≤ 100000)，表示存款年數和存款金額。",
        "theoutput": "輸出包含一行，一個實數，表示n年後存款總額，四捨五入至小數點後2位。",
        "sample": "[[\"5 10000\"],[\"11592.75\"],[\"10 20000\"],[\"26532.98\"],[\"1 20000\"],[\"20600.00\"]]",
        "hint": "使用複利公式，注意小數點後的位數。",
        "hash": "[\"資料型態\"]",
        "samplecode": "n, m = map(int, input().split())\ninterest_rate = 0.03\nfor i in range(n):\n\tm = m * (1 + interest_rate)\nprint('%.2f' % m)\n",
        "": ""
    },
    {
        "id": 17,
        "title": "Python資料型態",
        "content": "請寫一個程式，讀入一個字串和一個整數，將字串中的字元根據整數值進行切割。",
        "theinput": "輸入包含兩行，第一行為一個字串，長度不超過 10000，第二行為一個整數，表示要將字串切割的大小。",
        "theoutput": "輸出由切割後的字串所組成的一個列表，其中每個字串的長度為整數值。",
        "sample": "[[\"HelloWorld\",\"3\"],[\"Hel\",\"loW\",\"orl\",\"d\"],[\"PythonProgramming\",\"2\"],[\"Py\",\"th\",\"on\",\"Pr\",\"og\",\"ra\",\"mm\",\"in\",\"g\"]]",
        "hint": "使用Python內建的切割函數",
        "hash": "[\"Python\",\"字串\",\"列表\"]",
        "samplecode": "s = input()\nn = int(input())\nans = [s[i:i+n] for i in range(0, len(s), n)]\nprint(ans)\n",
        "": ""
    },
    {
        "id": 18,
        "title": "數字判斷",
        "content": "請寫一個程式，讀入一個整數，並判斷它是正數、負數還是零。",
        "theinput": "輸入共一行，內含一個整數 n (−109 ≤ n ≤ 109)。",
        "theoutput": "如果 n 為正數，輸出 Positive；如果 n 為負數，輸出 Negative；如果 n 為零，輸出 Zero。",
        "sample": "[[\"5\"],[\"Positive\"],[\"-8\"],[\"Negative\"],[\"0\"],[\"Zero\"]]",
        "hint": "使用 if/else 敘述和比較運算子",
        "hash": "[\"基本語法\",\"if/else 敘述\"]",
        "samplecode": "n = int(input())\nif n > 0:\n    print('Positive')\nelif n < 0:\n    print('Negative')\nelse:\n    print('Zero')\n",
        "": ""
    },
    {
        "id": 19,
        "title": "字串反轉",
        "content": "請寫一個程式，讀入一個字串，並將其反轉。",
        "theinput": "輸入共一行，內含一個字串 s (1 ≤ |s| ≤ 100)。",
        "theoutput": "輸出反轉後的字串。",
        "sample": "[[\"hello\"],[\"olleh\"],[\"Python\"],[\"nohtyP\"],[\"racecar\"],[\"racecar\"]]",
        "hint": "使用字串切片操作",
        "hash": "[\"字串操作\",\"切片操作\"]",
        "samplecode": "s = input()\nprint(s[::-1])\n",
        "": ""
    },
    {
        "id": 20,
        "title": "列表加總",
        "content": "請寫一個程式，讀入一個包含整數的列表，並求出列表中所有元素的和。",
        "theinput": "輸入共一行，內含有以空白隔開的整數 a1, a2, ..., an。列表的元素數量 n (1 ≤ n ≤ 100)，列表中的元素 ai (-10^9 ≤ ai ≤ 10^9)。",
        "theoutput": "輸出列表中所有元素的和。",
        "sample": "[[\"1 2 3 4 5\"],[\"15\"],[\"0\"],[\"0\"],[\"1 2 3 4 5 6 7 8 9 10\"],[\"55\"]]",
        "hint": "可以使用 for 迴圈將列表中的所有元素加總起來。",
        "hash": "[\"基本輸出輸入\",\"列表\",\"for 迴圈\"]",
        "samplecode": "nums = list(map(int, input().split()))\nprint(sum(nums))",
        "": ""
    },
    {
        "id": 21,
        "title": "元組取值",
        "content": "請寫一個程式，讀入一個包含兩個元素的元組，並輸出元組中的兩個元素。",
        "theinput": "輸入共一行，內含兩個整數 a, b (-10^9 ≤ a, b ≤ 10^9)。",
        "theoutput": "輸出元組中的兩個元素，中間以空白隔開。",
        "sample": "[[\"1 2\"],[\"1 2\"],[\"-1000000000 1000000000\"],[\"-1000000000 1000000000\"]]",
        "hint": "可以使用索引值來取得元組中的元素。",
        "hash": "[\"基本輸出輸入\",\"元組\",\"索引值\"]",
        "samplecode": "t = tuple(map(int, input().split()))\nprint(t[0], t[1])",
        "": ""
    },
    {
        "id": 22,
        "title": "字符串拼接",
        "content": "请编写一个程序，读取两个字符串并将它们拼接在一起。",
        "theinput": "每行输入一个字符串，用空格隔开。",
        "theoutput": "输出拼接后的字符串。",
        "sample": "[[\"hello \",\"world\"],[\"hello world\"]]",
        "hint": "可以使用字符串的加法运算符或 join 方法。",
        "hash": "[\"基本字符串操作\"]",
        "samplecode": "a, b = input().split()\nprint(a + b)\n",
        "": ""
    },
    {
        "id": 23,
        "title": "浮点数相加",
        "content": "请编写一个程序，读取两个浮点数并求它们的和。",
        "theinput": "每行输入一个浮点数，用空格隔开。",
        "theoutput": "输出两个数的和，保留两位小数。",
        "sample": "[[\"1.23 4.56\"],[\"5.79\"]]",
        "hint": "可以使用 float 函数将输入的字符串转换为浮点数。",
        "hash": "[\"浮点数运算\"]",
        "samplecode": "a, b = map(float, input().split())\nprint('%.2f' % (a + b))\n",
        "": ""
    },
    {
        "id": 24,
        "title": "列表求和",
        "content": "请编写一个程序，读取一个整数列表并求它们的和。",
        "theinput": "第一行输入一个整数 n，表示列表中元素的个数。第二行输入 n 个整数，表示列表中的元素。",
        "theoutput": "输出列表中所有元素的和。",
        "sample": "[[\"4\",\"1 2 3 4\"],[\"10\"]]",
        "hint": "可以使用 sum 函数求和。",
        "hash": "[\"列表操作\"]",
        "samplecode": "n = int(input())\narr = list(map(int, input().split()))\nprint(sum(arr))\n",
        "": ""
    },
    {
        "id": 25,
        "title": "檢查字串是否是回文",
        "content": "请编写一个程序，判断给定的字符串是否是回文，即正着读和倒着读是一样的。忽略字符串中的空格和标点符号。",
        "theinput": "输入字符串，长度不超过1000。",
        "theoutput": "如果输入字符串是回文，则输出True，否则输出False。",
        "sample": "[[\"A man, a plan, a canal, Panama!\"],[\"True\"],[\"Was it a car or a cat I saw?\"],[\"True\"],[\"Python programming is fun\"],[\"False\"]]",
        "hint": "可以使用字符串切片来实现字符串翻转，可以使用字符串的 isalnum() 方法来检查字符是否为字母或数字。",
        "hash": "[\"字符串处理\",\"逻辑判断\"]",
        "samplecode": "s = input()\ns = ''.join(filter(str.isalnum, s)).lower()\nprint(s == s[::-1])\n",
        "": ""
    },
    {
        "id": 26,
        "title": "计算平均数",
        "content": "请编写一个程序，计算一组数据的平均数。",
        "theinput": "第一行为数据个数n(0≤n≤100)，接下来n行为数据，数据范围在0到100之间，保留两位小数。",
        "theoutput": "输出数据的平均值，保留两位小数。",
        "sample": "[[\"3\\n80.00\\n75.50\\n90.00\"],[\"81.17\"],[\"5\\n69.63\\n70.15\\n54.98\\n68.20\\n84.43\"],[\"69.48\"],[\"0\\n\"],[\"0.00\"]]",
        "hint": "可以使用 sum() 函数来计算数据的总和。",
        "hash": "[\"数值计算\"]",
        "samplecode": "n = int(input())\ndata = []\nfor i in range(n):\n data.append(float(input()))\navg = sum(data) / n\nprint('%.2f' % avg)\n",
        "": ""
    },
    {
        "id": 27,
        "title": "身高排序",
        "content": "输入 n 个人的身高，将它们按照身高从小到大的顺序排序。",
        "theinput": "输入的第一行为一个整数 n（1 ≤ n ≤ 100），表示人数。接下来的一行为 n 个用空格隔开的正整数，表示 n 个人的身高。",
        "theoutput": "输出排序后的 n 个人的身高，每个人的身高占一行。",
        "sample": "[[\"5\",\"180 170 160 190 150\"],[\"150\",\"160\",\"170\",\"180\",\"190\"]]",
        "hint": "使用 python 内置的排序函数",
        "hash": "[\"列表\",\"排序\"]",
        "samplecode": "n = int(input())\nheights = list(map(int, input().split()))\nheights.sort()\nfor height in heights:\n    print(height)",
        "": ""
    },
    {
        "id": 28,
        "title": "最長遞增子序列",
        "content": "給定一個整數序列，請寫一個程式找到其中最長的遞增子序列（LIS）。",
        "theinput": "第一行為序列的長度n (1 <= n <= 1000)，第二行為n個數字，以空格分隔。",
        "theoutput": "輸出最長的遞增子序列的長度。",
        "sample": "[[\"8\"],[\"1 3 5 4 7 8 10 13\"],[\"5\"]]",
        "hint": "可使用動態規劃解法。",
        "hash": "[\"動態規劃\",\"最長遞增子序列\"]",
        "samplecode": "n = int(input())\narr = list(map(int, input().split()))\ndp = [1] * n\nfor i in range(1, n):\n    for j in range(i):\n        if arr[i] > arr[j]:\n            dp[i] = max(dp[i], dp[j]+1)\nprint(max(dp))\n",
        "": ""
    },
    {
        "id": 29,
        "title": "統計數據",
        "content": "給定一個整數序列，請寫一個程式計算其中的算術平均數、中位數和眾數。",
        "theinput": "第一行為序列的長度n (1 <= n <= 1000)，第二行為n個數字，以空格分隔。",
        "theoutput": "輸出算術平均數、中位數、眾數，以空格分隔。",
        "sample": "[[\"5\"],[\"1 2 2 3 4\"],[\"2.4 2 2\"]]",
        "hint": "可使用 collections.Counter 和 statistics 模組。",
        "hash": "[\"統計\",\"眾數\",\"中位數\",\"算術平均數\"]",
        "samplecode": "import collections\nimport statistics\n\nn = int(input())\narr = list(map(int, input().split()))\n\ncounter = collections.Counter(arr)\n\navg = sum(arr) / n\n\nif n % 2 == 0:\n    median = (sorted(arr)[n//2-1] + sorted(arr)[n//2]) / 2\nelse:\n    median = sorted(arr)[n//2]\n\nmode = [k for k, v in counter.items() if v == max(counter.values())]\nmode.sort()\n\nprint(avg, median, mode[0])\n",
        "": ""
    },
    {
        "id": 30,
        "title": "字串反轉",
        "content": "請寫一個程式，讀入一個字串，反轉這個字串。",
        "theinput": "每組測試資料共一行，內含一個字串，字串長度不超過 100。",
        "theoutput": "輸出反轉後的字串。",
        "sample": "[[\"python\"],[\"nohtyp\"]]",
        "hint": "利用字串的 slice 反轉操作。",
        "hash": "s = str(input())\nprint(s[::-1])",
        "samplecode": "2/19/2023, 11:21:59 AM",
        "": ""
    },
    {
        "id": 31,
        "title": "計算列表元素出現次數",
        "content": "請寫一個程式，讀入一個列表和一個元素，計算該元素在列表中出現的次數。",
        "theinput": "每組測試資料共兩行，第一行為列表中的元素，第二行為要查詢的元素。",
        "theoutput": "輸出該元素在列表中出現的次數。",
        "sample": "[[[\"apple\",\"banana\",\"cherry\",\"apple\",\"cherry\"],\"cherry\"],[[\"a\",\"b\",\"c\",\"c\",\"c\",\"a\"],\"a\"]]",
        "hint": "利用列表的 count 方法。",
        "hash": "lst = eval(input())\nelem = input()\nprint(lst.count(elem))",
        "samplecode": "2/19/2023, 11:22:05 AM",
        "": ""
    },
    {
        "id": 32,
        "title": "字典合併",
        "content": "請寫一個程式，讀入兩個字典，將它們合併後輸出。",
        "theinput": "每組測試資料共兩行，每行為一個字典，字典的鍵值都是整數。",
        "theoutput": "輸出合併後的字典。",
        "sample": "[[{\"a\":1,\"b\":2,\"c\":3},{\"b\":4,\"d\":5,\"e\":6}],[{\"x\":1,\"y\":2,\"z\":3},{\"z\":4,\"w\":5}]]",
        "hint": "利用字典的 update 方法。",
        "hash": "d1 = eval(input())\nd2 = eval(input())\nd1.update(d2)\nprint(d1)",
        "samplecode": "2/19/2023, 11:22:13 AM",
        "": ""
    },
    {
        "id": 33,
        "title": "数据类型转换",
        "content": "请编写一个程序，输入一个浮点数，将其转换为整数、字符串和布尔型，并输出转换后的结果。",
        "theinput": "每组输入为一个浮点数，其范围为 [0.0, 10000.0]。",
        "theoutput": "对于每个输入，输出其转换为整数、字符串和布尔型的结果，用空格隔开。",
        "sample": "[[\"3.14159\"],[\"3\",\"3.14159\",\"True\"],[\"0.0\",\"0\",\"False\"]]",
        "hint": "可以使用 Python 的内置类型转换函数。",
        "hash": "[\"数据类型转换\"]",
        "samplecode": "num = float(input())\nprint(int(num), str(num), bool(num))",
        "": ""
    },
    {
        "id": 34,
        "title": "字符串格式化",
        "content": "请编写一个程序，输入一个人名和一个整数，将它们格式化为一句话并输出。",
        "theinput": "每组输入为一个人名和一个整数，人名长度不超过 10 个字符，整数范围为 [1, 100]。",
        "theoutput": "对于每个输入，输出格式化后的字符串。",
        "sample": "[[\"Tom\",\"18\"],[\"Jack\",\"25\"],[\"Lily\",\"99\"]]",
        "hint": "可以使用 Python 的字符串格式化方法。",
        "hash": "[\"字符串格式化\"]",
        "samplecode": "name = input()\nage = int(input())\nprint('{} is {} years old.'.format(name, age))",
        "": ""
    },
    {
        "id": 35,
        "title": "列表操作",
        "content": "请编写一个程序，输入一个列表和一个整数 n，将列表的前 n 个元素删除，并输出删除后的列表。",
        "theinput": "每组输入为一个列表和一个整数 n，列表中的元素为整数，n 范围为 [1, 100]。",
        "theoutput": "对于每个输入，输出删除前 n 个元素后的列表。",
        "sample": "[[\"[1, 2, 3, 4, 5]\",\"3\"],[\"[2, 3, 4, 5, 6]\",\"1\"],[\"[9, 8, 7, 6, 5]\",\"5\"]]",
        "hint": "可以使用 Python 的列表切片操作。",
        "hash": "[\"列表操作\"]",
        "samplecode": "lst = eval(input())\nn = int(input())\nprint(lst[n:])",
        "": ""
    },
    {
        "id": 36,
        "title": "最大公因數",
        "content": "輸入兩個正整數，求它們的最大公因數。",
        "theinput": "每組輸入一行，包含兩個正整數 a 和 b （1 ≤ a, b ≤ 10000）。",
        "theoutput": "輸出一個正整數，表示 a 和 b 的最大公因數。",
        "sample": "[[\"24 30\"],[\"6\"],[\"14 21\"],[\"7\"],[\"25 125\"],[\"25\"]]",
        "hint": "使用歐幾里得算法求最大公因數",
        "hash": "[\"最大公因數\",\"歐幾里得算法\"]",
        "samplecode": "def gcd(a, b):\n if a == 0:\n return b\n return gcd(b % a, a)\n\nn = input()\na, b = map(int, n.split())\nprint(gcd(a, b))",
        "": ""
    },
    {
        "id": 37,
        "title": "找素數",
        "content": "輸入一個正整數 N，找出所有小於等於 N 的質數（素數），輸出它們的和。",
        "theinput": "一個正整數 N（1 ≤ N ≤ 100000）。",
        "theoutput": "輸出所有小於等於 N 的質數的和。",
        "sample": "[[\"10\"],[\"17\"],[\"100\"],[\"1060\"],[\"30000\"],[\"135935\"]]",
        "hint": "使用埃拉托斯特尼篩法找質數",
        "hash": "[\"質數\",\"素數\",\"篩法\"]",
        "samplecode": "def find_primes(n):\n is_prime = [True] * (n + 1)\n is_prime[0] = is_prime[1] = False\n for i in range(2, int(n ** 0.5) + 1):\n if is_prime[i]:\n for j in range(i ** 2, n + 1, i):\n is_prime[j] = False\n primes = [i for i in range(n + 1) if is_prime[i]]\n return primes\n\nn = int(input())\nprimes = find_primes(n)\nprint(sum(primes))",
        "": ""
    },
    {
        "id": 38,
        "title": "Count Characters",
        "content": "Write a program that reads a string and outputs the number of characters in the string.",
        "theinput": "The input consists of a single line of text, which contains up to 1000 printable ASCII characters.",
        "theoutput": "The output should contain a single integer: the number of characters in the input string.",
        "sample": "[[\"Hello, World!\"],[\"13\"],[\"Python is awesome\"],[\"17\"]]",
        "hint": "Use the len() function to count the number of characters in the string.",
        "hash": "[\"Basic Input/Output\"]",
        "samplecode": "s = input()\nprint(len(s))",
        "": ""
    },
    {
        "id": 39,
        "title": "Find Minimum",
        "content": "Write a program that finds the minimum value in a list of integers.",
        "theinput": "The first line of the input contains an integer N, the number of elements in the list. The second line contains N integers separated by spaces, the elements of the list. Each integer is between -1000 and 1000, inclusive.",
        "theoutput": "The output should contain a single integer: the minimum value in the list.",
        "sample": "[[\"5\",\"1 2 3 4 5\"],[\"1\"],[\"10\",\"-10 0 10 20 -30 -40 50 60 70 80\"],[\"-40\"]]",
        "hint": "Use the built-in min() function to find the minimum value in the list.",
        "hash": "[\"Lists\"]",
        "samplecode": "n = int(input())\nnums = list(map(int, input().split()))\nprint(min(nums))",
        "": ""
    },
    {
        "id": 40,
        "title": "Tuple Swap",
        "content": "Write a program that swaps the first and last elements of a tuple.",
        "theinput": "The input consists of a single line of text, which contains N integers separated by spaces (1 <= N <= 100).",
        "theoutput": "The output should be a tuple with the first and last elements swapped.",
        "sample": "[[\"1 2 3 4 5\"],[\"(5, 2, 3, 4, 1)\"],[\"10 20 30 40 50 60 70 80 90 100\"],[\"(100, 20, 30, 40, 50, 60, 70, 80, 90, 10)\"]]",
        "hint": "Tuples are immutable, so you need to convert the tuple to a list, swap the elements, and then convert it back to a tuple.",
        "hash": "[\"Tuples\"]",
        "samplecode": "t = tuple(map(int, input().split()))\nl = list(t)\nl[0], l[-1] = l[-1], l[0]\nt = tuple(l)\nprint(t)",
        "": ""
    },
    {
        "id": 41,
        "title": "數值總和",
        "content": "輸入一個正整數 n 和 n 個數值，計算並輸出這 n 個數值的總和。",
        "theinput": "輸入第一行為一個正整數 n (0 < n < 100)，表示接下來有 n 個數值。接下來的 n 行每行有一個數值。",
        "theoutput": "輸出這 n 個數值的總和。",
        "sample": "[[\"3\"],[\"1.2\"],[\"2.3\"],[\"3.4\"],[\"6.9\"]]",
        "hint": "注意數值類型和總和的計算方法。",
        "hash": "[\"基本輸出輸入\"]",
        "samplecode": "n = int(input())\nsum = 0\nfor i in range(n):\n\tsum += float(input())\nprint(sum)\n",
        "": ""
    },
    {
        "id": 42,
        "title": "字典操作",
        "content": "輸入一個字典和一個數值，將字典中所有值等於該數值的鍵全部輸出。",
        "theinput": "輸入第一行為一個字典，包含數個鍵值對，每行一個，以逗號隔開。接下來一行為一個數值。",
        "theoutput": "輸出所有值等於該數值的鍵，每行一個。",
        "sample": "[[\"{\\\"a\\\": 1, \\\"b\\\": 2, \\\"c\\\": 3, \\\"d\\\": 2}\"],[\"2\"]]",
        "hint": "可以遍歷字典中的鍵值對，使用條件判斷和輸出。",
        "hash": "[\"字典操作\"]",
        "samplecode": "import json\n\n# 讀入字典和數值\nd = json.loads(input())\nx = input()\n\n# 尋找所有值等於 x 的鍵\nkeys = []\nfor key in d:\n\tif d[key] == int(x):\n\t\tkeys.append(key)\n\n# 輸出鍵\nfor key in keys:\n\tprint(key)\n",
        "": ""
    },
    {
        "id": 43,
        "title": "Sorting Words",
        "content": "Write a program that reads a list of words and sorts them in alphabetical order.",
        "theinput": "The first line contains an integer n, the number of words in the list. Each of the following n lines contains a word.",
        "theoutput": "Print the words in alphabetical order, one per line.",
        "sample": "[[\"3\",\"banana\",\"apple\",\"cherry\"],[\"apple\",\"banana\",\"cherry\"]]",
        "hint": "n = int(input())\nwords = []\nfor i in range(n):\n    words.append(input())\nwords.sort()\nfor w in words:\n    print(w)",
        "hash": "You can use the sort() method to sort a list in place.",
        "samplecode": "2/19/2023, 11:34:11 AM",
        "": ""
    },
    {
        "id": 44,
        "title": "Fibonacci Sequence",
        "content": "Write a program that calculates the first n numbers in the Fibonacci sequence.",
        "theinput": "The input consists of a single integer n (1 <= n <= 30), the number of terms to be calculated.",
        "theoutput": "Print the first n numbers in the Fibonacci sequence, one per line.",
        "sample": "[[\"5\"],[\"0\",\"1\",\"1\",\"2\",\"3\"]]",
        "hint": "n = int(input())\na, b = 0, 1\nfor i in range(n):\n    print(a)\n    a, b = b, a + b",
        "hash": "The Fibonacci sequence is defined as follows: F(0) = 0, F(1) = 1, and F(n) = F(n-1) + F(n-2) for n > 1.",
        "samplecode": "2/19/2023, 11:34:17 AM",
        "": ""
    },
    {
        "id": 45,
        "title": "Counting Digits",
        "content": "Write a program that counts the number of digits in an integer.",
        "theinput": "The input consists of a single integer n (0 <= n <= 10^9).",
        "theoutput": "Print the number of digits in n.",
        "sample": "[[\"12345\"],[\"5\"]]",
        "hint": "n = int(input())\nprint(len(str(n)))",
        "hash": "You can convert an integer to a string using the str() function, and then use the len() function to count the number of characters in the string.",
        "samplecode": "2/19/2023, 11:34:22 AM",
        "": ""
    },
    {
        "id": 46,
        "title": "檢查字串是否為回文",
        "content": "請寫一個 Python 程式，檢查輸入的字串是否為回文（正反都能讀）。",
        "theinput": "輸入一行字串，字串長度不超過 100。",
        "theoutput": "如果是回文，輸出 True，否則輸出 False。",
        "sample": "[[\"racecar\"],[\"True\"],[\"hello\"],[\"False\"],[\"12321\"],[\"True\"]]",
        "hint": "可以使用反轉字串的方式檢查是否為回文。",
        "hash": "[\"字串操作\"]",
        "samplecode": "string = input()\nif string == string[::-1]:\n print(True)\nelse:\n print(False)\n",
        "": ""
    },
    {
        "id": 47,
        "title": "計算字元頻率",
        "content": "請寫一個 Python 程式，計算輸入的字串中每個字元出現的次數。",
        "theinput": "輸入一行字串，字串長度不超過 100。",
        "theoutput": "輸出每個字元出現的次數，按照字母表順序排序，並且用逗號隔開。",
        "sample": "[[\"hello world\"],[\"d:1,e:1,h:1,l:3,o:2,r:1,w:1\"],[\"abracadabra\"],[\"a:5,b:2,c:1,d:1,r:2\"],[\"123321\"],[\"1:2,2:2,3:2\"]]",
        "hint": "可以使用 Python 的 Counter 函數來計算字元頻率。",
        "hash": "[\"字串操作\"]",
        "samplecode": "from collections import Counter\nstring = input()\nresult = []\nfor key, value in sorted(Counter(string).items()):\n result.append('{}:{}'.format(key, value))\nprint(','.join(result))\n",
        "": ""
    },
    {
        "id": 48,
        "title": "找尋字串中的最長單詞",
        "content": "請寫一個程式，讀入一個句子，找出其中最長的單詞，並輸出其字元數。",
        "theinput": "輸入為一個字串，字串長度不超過 1000，只包含字母與空格。",
        "theoutput": "輸出為一個整數，表示最長的單詞的字元數。",
        "sample": "[[\"The quick brown fox jumps over the lazy dog.\"],[\"5\"],[\"Python is a great programming language.\"],[\"11\"]]",
        "hint": "可以使用 split() 函數將句子切割成單詞。",
        "hash": "[\"字串操作\"]",
        "samplecode": "sentence = input()\nwords = sentence.split()\nmax_len = 0\nfor word in words:\n    if len(word) > max_len:\n        max_len = len(word)\nprint(max_len)\n",
        "": ""
    },
    {
        "id": 49,
        "title": "統計字串中的元音字母數量",
        "content": "請寫一個程式，讀入一個字串，統計其中 a, e, i, o, u 這五個元音字母各自出現的次數，並輸出。",
        "theinput": "輸入為一個字串，字串長度不超過 1000，只包含小寫字母。",
        "theoutput": "輸出為五個整數，分別表示字串中 a, e, i, o, u 這五個元音字母出現的次數。",
        "sample": "[[\"hello world\"],[\"2 1 0 2 1\"],[\"python programming is fun\"],[\"2 1 4 2 1\"]]",
        "hint": "可以使用字串的 count() 函數來統計元音字母的數量。",
        "hash": "[\"字串操作\"]",
        "samplecode": "s = input()\nprint(s.count('a'), s.count('e'), s.count('i'), s.count('o'), s.count('u'))\n",
        "": ""
    },
    {
        "id": 50,
        "title": "Odd or Even",
        "content": "Write a Python function to determine if a given number is odd or even.",
        "theinput": "An integer N (0 <= N <= 1000000).",
        "theoutput": "Output 'Even' if the number is even, 'Odd' otherwise.",
        "sample": "[[\"2\"],[\"Even\"],[\"3\"],[\"Odd\"],[\"0\"],[\"Even\"]]",
        "hint": "def odd_or_even(n):\n    if n % 2 == 0:\n        return 'Even'\n    else:\n        return 'Odd'\n",
        "hash": "Use the modulo operator.",
        "samplecode": "2/19/2023, 11:39:50 AM",
        "": ""
    },
    {
        "id": 51,
        "title": "Leap Year",
        "content": "Write a Python function to determine if a given year is a leap year.",
        "theinput": "An integer Y (0 <= Y <= 10000).",
        "theoutput": "Output 'Leap year' if the year is a leap year, 'Common year' otherwise.",
        "sample": "[[\"2000\"],[\"Leap year\"],[\"1999\"],[\"Common year\"],[\"1900\"],[\"Common year\"]]",
        "hint": "def is_leap_year(year):\n    if year % 4 == 0:\n        if year % 100 == 0:\n            if year % 400 == 0:\n                return 'Leap year'\n            else:\n                return 'Common year'\n        else:\n            return 'Leap year'\n    else:\n        return 'Common year'\n",
        "hash": "A leap year is divisible by 4, but not by 100, except for years that are divisible by 400.",
        "samplecode": "2/19/2023, 11:39:57 AM",
        "": ""
    },
    {
        "id": 52,
        "title": "Sum of Numbers",
        "content": "Write a Python function to calculate the sum of all numbers from 1 to N.",
        "theinput": "An integer N (0 <= N <= 100000).",
        "theoutput": "Output the sum of all numbers from 1 to N.",
        "sample": "[[\"5\"],[\"15\"],[\"10\"],[\"55\"],[\"0\"],[\"0\"]]",
        "hint": "def sum_of_numbers(n):\n    return sum(range(1, n+1))\n",
        "hash": "Use the built-in 'sum' function.",
        "samplecode": "2/19/2023, 11:40:13 AM",
        "": ""
    },
    {
        "id": 53,
        "title": "二進位轉十進位",
        "content": "請寫一個程式，讀入一個整數，並將該整數的二進位表示法轉換為十進位表示法。",
        "theinput": "一個二進位整數，輸入格式為字串。",
        "theoutput": "轉換後的十進位整數。",
        "sample": "[[\"10101\"],[\"21\"]]",
        "hint": "n = int(input(), 2)\nprint(n)",
        "hash": "Python中可以使用int()函數進行進位制轉換。",
        "samplecode": "[\"基本輸出輸入\",\"數值轉換\"]",
        "": ""
    },
    {
        "id": 54,
        "title": "字串反轉",
        "content": "請寫一個程式，讀入一個字串，並將其反轉後輸出。",
        "theinput": "一個字串。",
        "theoutput": "反轉後的字串。",
        "sample": "[[\"Hello\"],[\"olleH\"]]",
        "hint": "s = input()\nprint(s[::-1])",
        "hash": "Python中可以使用切片（slice）來反轉序列。",
        "samplecode": "[\"基本輸出輸入\",\"字串操作\"]",
        "": ""
    },
    {
        "id": 55,
        "title": "整數求和",
        "content": "請寫一個程式，讀入一個整數 n 和 n 個整數，然後計算這 n 個整數的和。",
        "theinput": "第一行為一個整數 n，代表接下來會輸入 n 個整數，第二行開始是 n 個整數，整數之間用空格分隔，保證輸入的整數皆小於 1000。",
        "theoutput": "輸出 n 個整數的和。",
        "sample": "[[\"5\"],[\"1 2 3 4 5\"],[\"15\"]]",
        "hint": "n = int(input())\nnums = list(map(int, input().split()))\nprint(sum(nums))\n",
        "hash": "可以使用 Python 內建的 sum 函數進行求和。",
        "samplecode": "2/19/2023, 11:45:06 AM",
        "": ""
    },
    {
        "id": 56,
        "title": "刪除重複元素",
        "content": "請寫一個程式，讀入一個列表，然後刪除其中的重複元素。",
        "theinput": "第一行為一個整數 n，代表接下來會輸入 n 個元素，第二行開始是 n 個元素，元素之間用空格分隔，保證輸入的元素皆為整數。",
        "theoutput": "輸出刪除重複元素後的列表，每個元素之間用空格分隔。",
        "sample": "[[\"6\"],[\"1 2 3 1 2 3\"],[\"1 2 3\"]]",
        "hint": "n = int(input())\nnums = list(map(int, input().split()))\nnums = list(set(nums))\nnums.sort()\nprint(' '.join(map(str, nums)))\n",
        "hash": "可以使用 Python 內建的 set 函數刪除重複元素，然後使用 sort 函數進行排序。",
        "samplecode": "2/19/2023, 11:45:13 AM",
        "": ""
    },
    {
        "id": 57,
        "title": "進制轉換",
        "content": "請寫一個程式，將一個給定的10進制正整數轉換為指定進制的數。",
        "theinput": "共 2 行，第 1 行為一個正整數 n（1≤n≤10^9），表示要轉換的10進制正整數；第 2 行為一個正整數 m（2≤m≤36），表示要轉換的進制。",
        "theoutput": "輸出轉換後的數字，注意：對於1035之間的進制，需要用AZ來表示高位數字。輸出的數字必須是字符串型態，注意不要有空格、換行符等不必要的字符。",
        "sample": "[[\"12345\",\"16\"],[\"30312\",\"9\"],[\"1111\",\"2\"]]",
        "hint": "[[\"3039\"],[\"37018\"],[\"10001010111\"]]",
        "hash": "可以使用Python內建函數bin、oct、hex進行二進制、八進制、十六進制轉換",
        "samplecode": "[\"Python內建函數\"]",
        "": "2/19/2023, 11:46:23 AM"
    },
    {
        "id": 58,
        "title": "列表長度",
        "content": "請寫一個程式，讀入一個列表，並輸出列表的長度。",
        "theinput": "一行，包含多個整數，以空格分隔。",
        "theoutput": "一行，包含一個整數，為輸入的列表長度。",
        "sample": "[[\"1 2 3 4 5\"],[\"5\"]]",
        "hint": "Python 中，列表的長度可以通過 len() 函數得到。",
        "hash": "[\"List\"]",
        "samplecode": "a = input().split()\nprint(len(a))\n",
        "": ""
    },
    {
        "id": 59,
        "title": "列表排序",
        "content": "請寫一個程式，讀入一個列表，並將列表中的數字從小到大排序後輸出。",
        "theinput": "一行，包含多個整數，以空格分隔。",
        "theoutput": "一行，包含多個整數，以空格分隔，為輸入列表排序後的結果。",
        "sample": "[[\"3 1 4 1 5 9 2 6 5\"],[\"1 1 2 3 4 5 5 6 9\"]]",
        "hint": "Python 中，列表可以通過 sort() 函數進行排序。",
        "hash": "[\"List\",\"Sorting\"]",
        "samplecode": "a = input().split()\na.sort()\nprint(' '.join(a))\n",
        "": ""
    },
    {
        "id": 60,
        "title": "列表排序",
        "content": "請寫一個程式，讀入一個由數字組成的列表，將其從小到大排序，並輸出排序後的列表。",
        "theinput": "輸入的第一行為一個整數 n，表示列表中的元素個數，接下來的一行為 n 個以空格隔開的整數。",
        "theoutput": "輸出經過排序後的列表，每個元素以空格隔開。",
        "sample": "[[\"5\"],[\"5 2 7 3 8\"],[\"2 3 5 7 8\"]]",
        "hint": "可以使用 Python 內置的 sorted 函數進行排序，也可以使用列表自帶的 sort 方法。",
        "hash": "[\"列表\",\"排序\"]",
        "samplecode": "n = int(input())\narr = list(map(int, input().split()))\narr.sort()\nprint(' '.join(map(str, arr)))\n",
        "": ""
    },
    {
        "id": 61,
        "title": "使用集合處理資料",
        "content": "輸入一個數列，去除重複的元素，輸出結果。",
        "theinput": "輸入的數列中的數字以空格分隔。",
        "theoutput": "輸出一個數列，包含原始數列中的所有不重複的元素，元素之間以空格分隔。",
        "sample": "[[\"1 1 2 2 3 3\"],[\"1 2 3\"]]",
        "hint": "input_str = input()\ninput_list = input_str.split()\nunique_set = set(input_list)\nunique_list = list(unique_set)\nunique_list.sort()\nprint(' '.join(unique_list))",
        "hash": "集合的元素不重複",
        "samplecode": "[\"資料結構\",\"集合\"]",
        "": ""
    },
    {
        "id": 62,
        "title": "數字遊戲",
        "content": "請設計一個程式，輸入一個正整數 n，並輸出所有小於 n 的質數。",
        "theinput": "一個正整數 n，其中 2 ≤ n ≤ 1000。",
        "theoutput": "輸出所有小於 n 的質數，每個質數輸出一行。",
        "sample": "[[\"10\"],[\"2\",\"3\",\"5\",\"7\"],[\"2\"],[],[\"50\"],[\"2\",\"3\",\"5\",\"7\",\"11\",\"13\",\"17\",\"19\",\"23\",\"29\",\"31\",\"37\",\"41\",\"43\",\"47\"]]",
        "hint": "判斷質數的方法：若一個數不是質數，那麼它的因數中必定有一個小於它的平方根。",
        "hash": "[\"基本輸出輸入\",\"質數判定\"]",
        "samplecode": "import math\n\n# 判斷一個數是否是質數\ndef is_prime(n):\n if n <= 1:\n return False\n for i in range(2, int(math.sqrt(n)) + 1):\n if n % i == 0:\n return False\n return True\n\nn = int(input())\nfor i in range(2, n):\n if is_prime(i):\n print(i)",
        "": ""
    },
    {
        "id": 63,
        "title": "計算單詞出現次數",
        "content": "請寫一個程式，讀入一個字串，計算每個單詞出現的次數，並按照字母順序輸出結果。",
        "theinput": "輸入一個字串，長度不超過 1000。",
        "theoutput": "對於每個單詞，輸出其出現次數，格式為：單詞:出現次數，按照字母順序輸出。",
        "sample": "[[\"the quick brown fox jumped over the lazy dog\"],[\"brown dog fox jumped lazy over quick the the the the the the the\"]]",
        "hint": "[[\"brown:1\\ndog:1\\nfox:1\\njumped:1\\nlazy:1\\nover:1\\nquick:1\\nthe:2\"],[\"brown:1\\ndog:1\\nfox:1\\njumped:1\\nlazy:1\\nover:1\\nquick:1\\nthe:11\"]]",
        "hash": "可以使用字典來儲存每個單詞出現的次數。",
        "samplecode": "[\"字典\",\"字符串處理\"]",
        "": "2/19/2023, 11:57:22 AM"
    },
    {
        "id": 64,
        "title": "計算機",
        "content": "請編寫一個簡單的計算機，支持加、減、乘、除四種基本運算。",
        "theinput": "一行字符串，格式為 <num1><op><num2>，其中<num1>和<num2>是正整數，<op>是加、減、乘、除四種運算符之一（+、-、*、/）。",
        "theoutput": "輸出計算結果，保留兩位小數。",
        "sample": "[[\"2+3\"],[\"6/2\"]]",
        "hint": "[[\"5.00\"],[\"3.00\"]]",
        "hash": "使用Python內置的eval()函數計算字符串表達式。",
        "samplecode": "[\"計算\",\"字符串\",\"eval\"]",
        "": "2/19/2023, 11:59:29 AM"
    },
    {
        "id": 65,
        "title": "使用字典記錄學生分數",
        "content": "請寫一個程式，讀入一些學生的成績，並記錄它們在字典中。請設計一個函數，當給定一個學生姓名時，可以查詢他的成績。",
        "theinput": "輸入包含多組測試資料。每組測試資料由一個字串和一個整數組成，分別代表學生姓名和成績，以空格隔開。輸入以單獨一行的「0 0」為結束，不須處理。",
        "theoutput": "輸出學生的成績。",
        "sample": "[[\"David 90\\nTom 80\\n0 0\"],[\"{ 'David': 90, 'Tom': 80 }\"],[\"Bob 70\\nAlice 85\\nLucy 90\\n0 0\"],[\"{ 'Bob': 70, 'Alice': 85, 'Lucy': 90 }\"]]",
        "hint": "def score_dict(input_string):\n scores = {}\n lines = input_string.strip().split('\n')\n for line in lines:\n if line == '0 0':\n break\n name, score = line.split()\n scores[name] = int(score)\n return scores",
        "hash": "使用字典來記錄每個學生的成績",
        "samplecode": "[\"字典操作\",\"基本輸出輸入\"]",
        "": ""
    }
]